using System;
using System.IO;
using System.Linq;
using System.Reflection;
using Autodesk.Revit.UI;
using {2};

namespace {0}
{{
    internal class {1}Factory : IExternalApplication
    {{
        //public static  Context {{ get; }}
        private IExternalApplication _instance;
        private static Assembly s_assembly;
                                        
        static {1}Factory()
        {{
            var location = Assembly.GetExecutingAssembly().Location;
            //var path = Path.GetDirectoryName(location)!;
            //Context = new AddinLoadContext(path);
            //s_assembly = Context.LoadFromAssemblyPath(location);
            s_assembly = AddinLoadContext.Instance.LoadFromAssemblyPath(location);
        }}
                                        
        public {1}Factory()
        {{
            var types = s_assembly.GetTypes();
            var type = types.First(type => type.Name == "{1}");
            _instance = (IExternalApplication)Activator.CreateInstance(type);
        }}
                                    
        public Result OnStartup(UIControlledApplication application)
        {{
            return _instance.OnStartup(application);
        }}
                                    
        public Result OnShutdown(UIControlledApplication application)
        {{
            return _instance.OnShutdown(application);
        }}
    }}
}}
